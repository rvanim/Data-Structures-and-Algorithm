//Salapare, Romina Victoria (Finals Exam)



#include <iostream>

#include <vector>

#include <algorithm>



using namespace std;



int transmitters(vector<int>nums, int k){

    int startIndex = 0, count = 0, n = nums.size();



    while (startIndex < n){

        int left = startIndex, right = n - 1;

        int target  = nums[startIndex] + k;



        while (left <= right){

            int mid = left + (right - left)/2;

            if (nums[mid] <= target){

                startIndex = mid;

                if (nums[mid] == target)

                    break;

                left = mid + 1;

            }

            else {

                right = mid - 1;

            } 

        }

        ++count;



        target = nums[startIndex] + k;

        left = startIndex, right = n - 1;

        while (left <= right){

            int mid = left + (right - left)/2;

            if (nums[mid] > target) {

                startIndex = mid;

                if (nums[mid] == target){

                    ++startIndex;

                    break;

                }

                right = mid - 1;

            }

            else {

                left = mid + 1;

            }

        }

        if (nums[startIndex] < target) break;

    }

    return count;

}



int main(){

    int n;

    int k;

     

    cin >> n >> k;

    vector<int> x(n);



    for(int x_i = 0; x_i < n; x_i++){

        cin >> x[x_i];

    }

    

    sort(x.begin(), x.end());

    cout << transmitters(x, k) << endl;



    return 0;

}



